name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  pull_and_run_code:
    runs-on: self-hosted
    steps:
      - name: Stop the container
        run: docker stop test-calc || true

      - name: Remove the container test-calc
        run: docker rm test-calc || true

      - name: Get the code from Docker Hub
        run: docker pull melvinsamuel070/kind_carson

      - name: Run the image as a container
        run: docker run -d -p 3004:3000 --name test-calc melvinsamuel070/image:1

      - name: Send Slack message for deployment success
        if: success()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'D079JHV7H60'  # Replace with your channel ID
          slack-message: "Deployment succeeded! ðŸŽ‰\n[Commit URL](${{ github.event.workflow_run.head_commit.url }})"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Send Slack message for deployment failure
        if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'D079JHV7H60'  # Replace with your channel ID
          slack-message: "Deployment failed. ðŸ˜ž\n[Commit URL](${{ github.event.workflow_run.head_commit.url }})"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install kubectl
        run: |
          # Install kubectl
          sudo apt-get update && sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Verify kubectl version
        run: kubectl version --client

  install_minikube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Minikube
        run: |
          sudo apt update
          sudo apt install -y curl wget apt-transport-https
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube

      - name: Verify Minikube installation
        run: minikube version

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Check Minikube status
        run: minikube status

      - name: Set up kubectl
        run: |
          kubectl config use-context minikube
          kubectl version --client

      - name: Deploy to Kubernetes
        run: |
          echo '---
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: docker-app
          spec:
            replicas: 3
            selector:
              matchLabels:
                app: app
            template:
              metadata:
                labels:
                  app: app
              spec:
                containers:
                  - name: docker-app
                    image: test-image:1
                    ports:
                      - containerPort: 80' > deployment.yaml
          kubectl apply -f deployment.yaml

      - name: Check deployment status
        run: kubectl get deployments

      - name: Deploy Kubernetes Service
        run: |
          echo '---
          apiVersion: v1
          kind: Service
          metadata:
            name: app-services
          spec:
            selector:
              app: app
            ports:
              - port: 80
                targetPort: 80
            type: LoadBalancer' > service.yaml
          kubectl apply -f service.yaml

      - name: Check service status
        run: kubectl get svc

  install_helm:
    runs-on: ubuntu-latest
    needs: install_minikube
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm --yes

      - name: Verify Helm installation
        run: helm version --short
